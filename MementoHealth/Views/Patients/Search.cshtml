@model MementoHealth.Models.PatientSearchModel

@{
    ViewBag.Title = "Search for Patient";
}

<h2>@ViewBag.Title</h2>
<hr />

<div>@Html.ActionLink("Back to List", "Index")</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-auto" style="text-align: left; padding: 0 0 0 0 ">
                @Html.LabelFor(model => model.ExternalPatientId, htmlAttributes: new { @class = "control-label col-md-auto" })
            </div>
            <div class="col-md-auto">
                @Html.EditorFor(model => model.ExternalPatientId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExternalPatientId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@if (Model?.Results != null)
{
    int found = Model.Results.Count();
    <span class="text-info">@found patient@(found == 1 ? "" : "s") found:</span>
    Html.RenderPartial("_PatientsTablePartial", Model.Results);
}